<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>myblog1</title>
    <link href="/2023/08/02/myblog1/"/>
    <url>/2023/08/02/myblog1/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>myblog</title>
    <link href="/2023/08/02/myblog/"/>
    <url>/2023/08/02/myblog/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Git入门文档</title>
    <link href="/2023/08/01/git%E5%85%A5%E9%97%A8%E6%96%87%E6%A1%A3/"/>
    <url>/2023/08/01/git%E5%85%A5%E9%97%A8%E6%96%87%E6%A1%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><p>学习git之前，我们需要先明白一个概念</p><h3 id="版本控制"><a href="#版本控制" class="headerlink" title="版本控制"></a>版本控制</h3><ol><li><h5 id="什么是版本控制"><a href="#什么是版本控制" class="headerlink" title="什么是版本控制"></a>什么是版本控制</h5></li></ol><p>版本控制（Revision control）是一种在开发的过程中用于管理我们对文件、目录或工程等内容的修改历史，方便查看更改历史记录，备份以便恢复以前的版本的软件工程技术。</p><ul><li>实现跨区域多人协同开发</li><li>追踪和记载一个或者多个文件的历史记录</li><li>组织和保护你的源代码和文档</li><li>统计工作量</li><li>并行开发、提高开发效率</li><li>跟踪记录整个软件的开发过程</li><li>减轻开发人员的负担，节省时间，同时降低人为错误</li></ul><p>简单说就是用于管理多人协同开发项目的技术。</p><p>没有进行版本控制或者版本控制本身缺乏正确的流程管理，在软件开发过程中将会引入很多问题，如软件代码的一致性、软件内容的冗余、软件过程的事物性、软件开发过程中的并发性、软件源代码的安全性，以及软件的整合等问题。</p><p>无论是工作还是学习，或者是自己做笔记，都经历过这样一个阶段！我们就迫切需要一个版本控制工具！</p><img src="https://s1.ax1x.com/2023/06/20/pC8FnfK.md.jpg" alt="pC8FnfK.md.jpg" style="zoom: 50%;" /><p>多人开发就必须要使用版本控制！</p><h2 id="常见的版本控制工具"><a href="#常见的版本控制工具" class="headerlink" title="常见的版本控制工具"></a>常见的版本控制工具</h2><p>我们学习的东西，一定是当下最流行的！</p><p>主流的版本控制器有如下这些：</p><ul><li><strong>Git</strong></li><li><strong>SVN</strong>（Subversion）</li><li><strong>CVS</strong>（Concurrent Versions System）</li><li><strong>VSS</strong>（Micorosoft Visual SourceSafe）</li><li><strong>TFS</strong>（Team Foundation Server）</li><li>Visual Studio Online</li></ul><p>版本控制产品非常的多（Perforce、Rational ClearCase、RCS（GNU Revision Control System）、Serena Dimention、SVK、BitKeeper、Monotone、Bazaar、Mercurial、SourceGear Vault），现在影响力最大且使用最广泛的是Git与SVN</p><h2 id="版本控制分类"><a href="#版本控制分类" class="headerlink" title="版本控制分类"></a>版本控制分类</h2><p><strong>1、本地版本控制</strong></p><p>记录文件每次的更新，可以对每个版本做一个快照，或是记录补丁文件，适合个人用，如RCS。</p><p><a href="https://imgse.com/i/pC8i4ot"><img src="https://s1.ax1x.com/2023/06/20/pC8i4ot.png" alt="pC8i4ot.png"></a></p><p><strong>2、集中版本控制  SVN</strong></p><p>所有的版本数据都保存在服务器上，协同开发者从服务器上同步更新或上传自己的修改</p><p><img src="https://s1.ax1x.com/2023/06/20/pC8iHSS.png" alt="pC8iHSS.png">](<a href="https://imgse.com/i/pC8iHSS">https://imgse.com/i/pC8iHSS</a>)</p><p>所有的版本数据都存在服务器上，用户的本地只有自己以前所同步的版本，如果不连网的话，用户就看不到历史版本，也无法切换版本验证问题，或在不同分支工作。而且，所有数据都保存在单一的服务器上，有很大的风险这个服务器会损坏，这样就会丢失所有的数据，当然可以定期备份。代表产品：SVN、CVS、VSS</p><p><strong>3、分布式版本控制 Git</strong></p><p>每个人都拥有全部的代码！安全隐患！</p><p>所有版本信息仓库全部同步到本地的每个用户，这样就可以在本地查看所有版本历史，可以离线在本地提交，只需在连网时push到相应的服务器或其他用户那里。由于每个用户那里保存的都是所有的版本数据，只要有一个用户的设备没有问题就可以恢复所有的数据，但这增加了本地存储空间的占用。</p><p>不会因为服务器损坏或者网络问题，造成不能工作的情况！</p><p><a href="https://imgse.com/i/pC8iqyQ"><img src="https://s1.ax1x.com/2023/06/20/pC8iqyQ.png" alt="pC8iqyQ.png"></a></p><h2 id="Git与SVN的主要区别"><a href="#Git与SVN的主要区别" class="headerlink" title="Git与SVN的主要区别"></a>Git与SVN的主要区别</h2><p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而工作的时候，用的都是自己的电脑，所以首先要从中央服务器得到最新的版本，然后工作，完成工作后，需要把自己做完的活推送到中央服务器。集中式版本控制系统是必须联网才能工作，对网络带宽要求较高。</p><p>![图片](data:image&#x2F;svg+xml,%3C%3Fxml version&#x3D;’1.0’ encoding&#x3D;’UTF-8’%3F%3E%3Csvg width&#x3D;’1px’ height&#x3D;’1px’ viewBox&#x3D;’0 0 1 1’ version&#x3D;’1.1’ xmlns&#x3D;’<a href="http://www.w3.org/2000/svg">http://www.w3.org/2000/svg</a>‘ xmlns:xlink&#x3D;’<a href="http://www.w3.org/1999/xlink'%3E%3Ctitle%3E%3C/title%3E%3Cg">http://www.w3.org/1999/xlink&#39;%3E%3Ctitle%3E%3C/title%3E%3Cg</a> stroke&#x3D;’none’ stroke-width&#x3D;’1’ fill&#x3D;’none’ fill-rule&#x3D;’evenodd’ fill-opacity&#x3D;’0’%3E%3Cg transform&#x3D;’translate(-249.000000, -126.000000)’ fill&#x3D;’%23FFFFFF’%3E%3Crect x&#x3D;’249’ y&#x3D;’126’ width&#x3D;’1’ height&#x3D;’1’%3E%3C&#x2F;rect%3E%3C&#x2F;g%3E%3C&#x2F;g%3E%3C&#x2F;svg%3E)</p><p>Git是分布式版本控制系统，没有中央服务器，每个人的电脑就是一个完整的版本库，工作的时候不需要联网了，因为版本都在自己电脑上。协同的方法是这样的：比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。Git可以直接看到更新了哪些代码和文件！</p><h5 id="Git是目前世界上最先进的分布式版本控制系统。"><a href="#Git是目前世界上最先进的分布式版本控制系统。" class="headerlink" title="Git是目前世界上最先进的分布式版本控制系统。"></a>Git是目前世界上最先进的分布式版本控制系统。</h5><p>聊聊Git的历史</p><p>同生活中的许多伟大事物一样，Git 诞生于一个极富纷争大举创新的年代。</p><p>Linux 内核开源项目有着为数众广的参与者。绝大多数的 Linux 内核维护工作都花在了提交补丁和保存归档的繁琐事务上(1991－2002年间)。到 2002 年，整个项目组开始启用一个专有的分布式版本控制系统 BitKeeper 来管理和维护代码。</p><p>Linux社区中存在很多的大佬！破解研究 BitKeeper ！</p><p>到了 2005 年，开发 BitKeeper 的商业公司同 Linux 内核开源社区的合作关系结束，他们收回了 Linux 内核社区免费使用 BitKeeper 的权力。这就迫使 Linux 开源社区(特别是 Linux 的缔造者 Linus Torvalds)基于使用 BitKeeper 时的经验教训，开发出自己的版本系统。（2周左右！） 也就是后来的 Git！</p><p><strong>Git是目前世界上最先进的分布式版本控制系统。</strong></p><p>Git是免费、开源的，最初Git是为辅助 Linux 内核开发的，来替代 BitKeeper！</p><p><a href="https://imgse.com/i/pC8ibQg"><img src="https://s1.ax1x.com/2023/06/20/pC8ibQg.png" alt="pC8ibQg.png"></a></p><p>Linux和Git之父李纳斯·托沃兹（Linus Benedic Torvalds）1969、芬兰</p><p>Git环境配置</p><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><p>打开 [git官网] <a href="https://git-scm.com/%EF%BC%8C%E4%B8%8B%E8%BD%BDgit%E5%AF%B9%E5%BA%94%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%89%88%E6%9C%AC%E3%80%82">https://git-scm.com/，下载git对应操作系统的版本。</a></p><p>所有东西下载慢的话就可以去找镜像！</p><p>官网下载太慢，我们可以使用淘宝镜像下载：<a href="http://npm.taobao.org/mirrors/git-for-windows/">http://npm.taobao.org/mirrors/git-for-windows/</a></p><p>下载对应的版本即可安装！</p><p>安装：无脑下一步即可！安装完毕就可以使用了！</p><h2 id="启动Git"><a href="#启动Git" class="headerlink" title="启动Git"></a>启动Git</h2><p>安装成功后在开始菜单中会有Git项，菜单下有3个程序：任意文件夹下右键也可以看到对应的程序！</p><p><a href="https://imgse.com/i/pC8ioJf"><img src="https://s1.ax1x.com/2023/06/20/pC8ioJf.png" alt="pC8ioJf.png"></a></p><p><strong>Git Bash：</strong>Unix与Linux风格的命令行，使用最多，推荐最多</p><p><strong>Git CMD：</strong>Windows风格的命令行</p><p><strong>Git GUI</strong>：图形界面的Git，不建议初学者使用，尽量先熟悉常用命令</p><h2 id="常用的Linux命令"><a href="#常用的Linux命令" class="headerlink" title="常用的Linux命令"></a>常用的Linux命令</h2><p>平时一定要多使用这些基础的命令！</p><p>1）、cd : 改变目录。</p><p>2）、cd . . 回退到上一个目录，直接cd进入默认目录</p><p>3）、pwd : 显示当前所在的目录路径。</p><p>4）、ls(ll):  都是列出当前目录中的所有文件，只不过ll(两个ll)列出的内容更为详细。</p><p>5）、touch : 新建一个文件 如 touch index.js 就会在当前目录下新建一个index.js文件。</p><p>6）、rm:  删除一个文件, rm index.js 就会把index.js文件删除。</p><p>7）、mkdir:  新建一个目录,就是新建一个文件夹。</p><p>8）、rm -r :  删除一个文件夹, rm -r src 删除src目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf / 切勿在Linux中尝试！删除电脑中全部文件！<br></code></pre></td></tr></table></figure><p>9）、mv 移动文件, mv index.html src index.html 是我们要移动的文件, src 是目标文件夹,当然, 这样写,必须保证文件和目标文件夹在同一目录下。</p><p>10）、reset 重新初始化终端&#x2F;清屏。</p><p>11）、clear 清屏。</p><p>12）、history 查看命令历史。</p><p>13）、help 帮助。</p><p>14）、exit 退出。</p><p>15）、#表示注释</p><h2 id="Git配置"><a href="#Git配置" class="headerlink" title="Git配置"></a>Git配置</h2><p>所有的配置文件，其实都保存在本地！</p><p>查看配置 git config -l</p><p><a href="https://imgse.com/i/pC8iTW8"><img src="https://s1.ax1x.com/2023/06/20/pC8iTW8.md.png" alt="pC8iTW8.md.png"></a></p><p>查看不同级别的配置文件：</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><span class="hljs-comment">#查看系统config</span><br>git config <span class="hljs-params">--system</span> <span class="hljs-params">--list</span>　<br><span class="hljs-comment">#查看当前用户（global）配置</span><br>git config <span class="hljs-params">--global</span>  <span class="hljs-params">--list</span><br></code></pre></td></tr></table></figure><p><strong>Git相关的配置文件：</strong></p><p>1）、Git\etc\gitconfig  ：Git 安装目录下的 gitconfig   –system 系统级</p><p>2）、C:\Users\Administrator\ .gitconfig   只适用于当前登录用户的配置  –global 全局</p><p>这里可以直接编辑配置文件，通过命令设置后会响应到这里。</p><h2 id="设置用户名与邮箱（用户标识，必要）"><a href="#设置用户名与邮箱（用户标识，必要）" class="headerlink" title="设置用户名与邮箱（用户标识，必要）"></a>设置用户名与邮箱（用户标识，必要）</h2><p>当你安装Git后首先要做的事情是设置你的用户名称和e-mail地址。这是非常重要的，因为每次Git提交都会使用该信息。它被永远的嵌入到了你的提交中：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs autoit">git config --<span class="hljs-keyword">global</span> user.name <span class="hljs-string">&quot;kuangshen&quot;</span>  <span class="hljs-meta">#名称</span><br>git config --<span class="hljs-keyword">global</span> user.email <span class="hljs-number">24736743</span><span class="hljs-symbol">@qq</span>.com  <span class="hljs-meta">#邮箱</span><br></code></pre></td></tr></table></figure><p>只需要做一次这个设置，如果你传递了–global 选项，因为Git将总是会使用该信息来处理你在系统中所做的一切操作。如果你希望在一个特定的项目中使用不同的名称或e-mail地址，你可以在该项目中运行该命令而不要–global选项。总之–global为全局配置，不加为某个项目的特定配置。</p><p>Git基本理论（重要）</p><h2 id="三个区域"><a href="#三个区域" class="headerlink" title="三个区域"></a>三个区域</h2><p>Git本地有三个工作区域：工作目录（Working Directory）、暂存区(Stage&#x2F;Index)、资源库(Repository或Git Directory)。如果在加上远程的git仓库(Remote Directory)就可以分为四个工作区域。文件在这四个区域之间的转换关系如下：</p><p><a href="https://imgse.com/i/pC8iLLj"><img src="https://s1.ax1x.com/2023/06/20/pC8iLLj.png" alt="pC8iLLj.png"></a></p><ul><li>Workspace：工作区，就是你平时存放项目代码的地方</li><li>Index &#x2F; Stage：暂存区，用于临时存放你的改动，事实上它只是一个文件，保存即将提交到文件列表信息</li><li>Repository：仓库区（或本地仓库），就是安全存放数据的位置，这里面有你提交到所有版本的数据。其中HEAD指向最新放入仓库的版本</li><li>Remote：远程仓库，托管代码的服务器，可以简单的认为是你项目组中的一台电脑用于远程数据交换</li></ul><p>本地的三个区域确切的说应该是git仓库中HEAD指向的版本：</p><p><a href="https://imgse.com/i/pC8iXes"><img src="https://s1.ax1x.com/2023/06/20/pC8iXes.png" alt="pC8iXes.png"></a></p><ul><li>Directory：使用Git管理的一个目录，也就是一个仓库，包含我们的工作空间和Git的管理空间。</li><li>WorkSpace：需要通过Git进行版本控制的目录和文件，这些目录和文件组成了工作空间。</li><li>.git：存放Git管理信息的目录，初始化仓库的时候自动创建。</li><li>Index&#x2F;Stage：暂存区，或者叫待提交更新区，在提交进入repo之前，我们可以把所有的更新放在暂存区。</li><li>Local Repo：本地仓库，一个存放在本地的版本库；HEAD会只是当前的开发分支（branch）。</li><li>Stash：隐藏，是一个工作状态保存栈，用于保存&#x2F;恢复WorkSpace中的临时状态。</li></ul><h2 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h2><p>git的工作流程一般是这样的：</p><p>１、在工作目录中添加、修改文件；</p><p>２、将需要进行版本管理的文件放入暂存区域；</p><p>３、将暂存区域的文件提交到git仓库。</p><p>因此，git管理的文件有三种状态：已修改（modified）,已暂存（staged）,已提交(committed)</p><p><a href="https://imgse.com/i/pC8ivoq"><img src="https://s1.ax1x.com/2023/06/20/pC8ivoq.jpg" alt="pC8ivoq.jpg"></a></p><p>Git项目搭建</p><h2 id="创建工作目录与常用指令"><a href="#创建工作目录与常用指令" class="headerlink" title="创建工作目录与常用指令"></a>创建工作目录与常用指令</h2><p>工作目录（WorkSpace)一般就是你希望Git帮助你管理的文件夹，可以是你项目的目录，也可以是一个空目录，建议不要有中文。</p><p>日常使用只要记住下图6个命令：</p><p><a href="https://imgse.com/i/pC8ijwn"><img src="https://s1.ax1x.com/2023/06/20/pC8ijwn.png" alt="pC8ijwn.png"></a></p><h2 id="本地仓库搭建"><a href="#本地仓库搭建" class="headerlink" title="本地仓库搭建"></a>本地仓库搭建</h2><p>创建本地仓库的方法有两种：一种是创建全新的仓库，另一种是克隆远程仓库。</p><p>1、创建全新的仓库，需要用GIT管理的项目的根目录执行：</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-comment"># 在当前目录新建一个Git代码库</span><br><span class="hljs-variable">$ </span>git init<br></code></pre></td></tr></table></figure><p>2、执行后可以看到，仅仅在项目目录多出了一个.git目录，关于版本等的所有信息都在这个目录里面。</p><h2 id="克隆远程仓库"><a href="#克隆远程仓库" class="headerlink" title="克隆远程仓库"></a>克隆远程仓库</h2><p>1、另一种方式是克隆远程目录，由于是将远程服务器上的仓库完全镜像一份至本地！</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-comment"># 克隆一个项目和它的整个代码历史(版本信息)</span><br>$ git <span class="hljs-keyword">clone</span> <span class="hljs-title">[url</span>] <br><span class="hljs-comment"># https://gitee.com/kuangstudy/openclass.git</span><br></code></pre></td></tr></table></figure><p>2、去 gitee 或者 github 上克隆一个测试！</p><p>Git文件操作</p><h2 id="文件的四种状态"><a href="#文件的四种状态" class="headerlink" title="文件的四种状态"></a>文件的四种状态</h2><p>版本控制就是对文件的版本控制，要对文件进行修改、提交等操作，首先要知道文件当前在什么状态，不然可能会提交了现在还不想提交的文件，或者要提交的文件没提交上。</p><ul><li>Untracked: 未跟踪, 此文件在文件夹中, 但并没有加入到git库, 不参与版本控制. 通过git add 状态变为Staged.</li><li>Unmodify: 文件已经入库, 未修改, 即版本库中的文件快照内容与文件夹中完全一致. 这种类型的文件有两种去处, 如果它被修改, 而变为Modified. 如果使用git rm移出版本库, 则成为Untracked文件</li><li>Modified: 文件已修改, 仅仅是修改, 并没有进行其他的操作. 这个文件也有两个去处, 通过git add可进入暂存staged状态, 使用git checkout 则丢弃修改过, 返回到unmodify状态, 这个git checkout即从库中取出文件, 覆盖当前修改 !</li><li>Staged: 暂存状态. 执行git commit则将修改同步到库中, 这时库中的文件和本地文件又变为一致, 文件为Unmodify状态. 执行git reset HEAD filename取消暂存, 文件状态为Modified</li></ul><h2 id="查看文件状态"><a href="#查看文件状态" class="headerlink" title="查看文件状态"></a>查看文件状态</h2><p>上面说文件有4种状态，通过如下命令可以查看到文件的状态：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-comment">#查看指定文件状态</span><br><span class="hljs-attribute">git</span> status<span class="hljs-meta"> [filename]</span><br><span class="hljs-comment">#查看所有文件状态</span><br><span class="hljs-attribute">git</span> status<br><span class="hljs-comment"># git add .                  添加所有文件到暂存区</span><br><span class="hljs-comment"># git commit -m &quot;消息内容&quot;    提交暂存区中的内容到本地仓库 -m 提交信息</span><br></code></pre></td></tr></table></figure><h2 id="忽略文件"><a href="#忽略文件" class="headerlink" title="忽略文件"></a>忽略文件</h2><p>有些时候我们不想把某些文件纳入版本控制中，比如数据库文件，临时文件，设计文件等</p><p>在主目录下建立”.gitignore”文件，此文件有如下规则：</p><ol><li>忽略文件中的空行或以井号（#）开始的行将会被忽略。</li><li>可以使用Linux通配符。例如：星号（*）代表任意多个字符，问号（？）代表一个字符，方括号（[abc]）代表可选字符范围，大括号（{string1,string2,…}）代表可选的字符串等。</li><li>如果名称的最前面有一个感叹号（!），表示例外规则，将不被忽略。</li><li>如果名称的最前面是一个路径分隔符（&#x2F;），表示要忽略的文件在此目录下，而子目录中的文件不忽略。</li><li>如果名称的最后面是一个路径分隔符（&#x2F;），表示要忽略的是此目录下该名称的子目录，而非文件（默认文件或目录都忽略）。</li></ol><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-comment">#为注释</span><br>*.txt        <span class="hljs-comment">#忽略所有 .txt结尾的文件,这样的话上传就不会被选中！</span><br>!lib.txt     <span class="hljs-comment">#但lib.txt除外</span><br>/temp        <span class="hljs-comment">#仅忽略项目根目录下的TODO文件,不包括其它目录temp</span><br>build<span class="hljs-regexp">/       #忽略build/</span>目录下的所有文件<br>doc<span class="hljs-regexp">/*.txt    #会忽略 doc/</span>notes.txt 但不包括 doc<span class="hljs-regexp">/server/</span>arch.txt<br></code></pre></td></tr></table></figure><p>使用码云</p><h2 id="github-是有墙的，比较慢，在国内的话，我们一般使用-gitee-，公司中有时候会搭建自己的gitlab服务器"><a href="#github-是有墙的，比较慢，在国内的话，我们一般使用-gitee-，公司中有时候会搭建自己的gitlab服务器" class="headerlink" title="github 是有墙的，比较慢，在国内的话，我们一般使用 gitee ，公司中有时候会搭建自己的gitlab服务器"></a>github 是有墙的，比较慢，在国内的话，我们一般使用 gitee ，公司中有时候会搭建自己的gitlab服务器</h2><p>这个其实可以作为大家未来找工作的一个重要信息！</p><p>1、注册登录码云，完善个人信息</p><p>2、设置本机绑定SSH公钥，实现免密码登录！（免密码登录，这一步挺重要的，码云是远程仓库，我们是平时工作在本地仓库！)</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c"><span class="hljs-meta"># 进入 C:\Users\Administrator\.ssh 目录</span><br><span class="hljs-meta"># 生成公钥</span><br>ssh-keygen<br></code></pre></td></tr></table></figure><p>3、将公钥信息public key 添加到码云账户中即可！</p><p>4、使用码云创建一个自己的仓库！</p><p>许可证：开源是否可以随意转载，开源但是不能商业使用，不能转载，…  限制！</p><p>克隆到本地！</p><p>IDEA中集成Git</p><p>1、新建项目，绑定git。</p><p>注意观察idea中的变化</p><p>2、修改文件，使用IDEA操作git。</p><ul><li>添加到暂存区</li><li>commit 提交</li><li>push到远程仓库</li></ul><p>3、提交测试</p><p>这些都是单个人的操作！</p><p>学习的方式最重要！学会学习！我上课的更多时候都是在教大家去学习一种理念和思想（学习方式）</p><p>有道无术、术尚可求。有术无道、止于术！</p><p>真正的教学，授人以渔！</p><h2 id="说明：GIT分支"><a href="#说明：GIT分支" class="headerlink" title="说明：GIT分支"></a>说明：GIT分支</h2><p>分支在GIT中相对较难，分支就是科幻电影里面的平行宇宙，如果两个平行宇宙互不干扰，那对现在的你也没啥影响。不过，在某个时间点，两个平行宇宙合并了，我们就需要处理一些问题了！</p><p>git分支中常用指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">列出所有本地分支</span><br>git branch<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">列出所有远程分支</span><br>git branch -r<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">新建一个分支，但依然停留在当前分支</span><br>git branch [branch-name]<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">新建一个分支，并切换到该分支</span><br>git checkout -b [branch]<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">合并指定分支到当前分支</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git merge [branch]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除分支</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git branch -d [branch-name]</span><br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">删除远程分支</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git push origin --delete [branch-name]</span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git branch -dr [remote/branch]</span><br></code></pre></td></tr></table></figure><p>IDEA中操作</p><p>如果同一个文件在合并分支时都被修改了则会引起冲突：解决的办法是我们可以修改冲突文件后重新提交！选择要保留他的代码还是你的代码！</p><p>master主分支应该非常稳定，用来发布新版本，一般情况下不允许在上面工作，工作一般情况下在新建的dev分支上工作，工作完后，比如上要发布，或者说dev分支代码稳定后可以合并到主分支master上来。</p><p>作业练习：找一个小伙伴，一起搭建一个远程仓库，来练习Git！</p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>git入门</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于SpringBoot+Vue的学生选课管理系统</title>
    <link href="/2023/08/01/springboot+vue%E5%AD%A6%E7%94%9F%E9%80%89%E8%AF%BE%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/08/01/springboot+vue%E5%AD%A6%E7%94%9F%E9%80%89%E8%AF%BE%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="基于SpringBoot-Vue的学生选课管理系统"><a href="#基于SpringBoot-Vue的学生选课管理系统" class="headerlink" title="基于SpringBoot+Vue的学生选课管理系统"></a>基于SpringBoot+Vue的学生选课管理系统</h1><h4 id="1、项目介绍"><a href="#1、项目介绍" class="headerlink" title="1、项目介绍"></a>1、项目介绍</h4><p>基于SpringBoot+Vue的学生选课管理系统采用前后端分离的架构方式，系统分为管理员、老师、学生等三种角色， 权限分配如下</p><p>管理员拥有所有权限:</p><ul><li>学生管理：可以对所有学生进行管理操作（新增学生、修改学生、删除学生）</li><li>教师管理：可以对所有教师进行管理操作（新增教师、修改教师、删除教师）</li><li>课程管理：可以对所有课程进行管理操作（新增课程、修改课程、删除课程）</li><li>开课表管理：对已开课进行管理（删除开课，搜索）</li><li>学生成绩管理：查询所有学生成绩，成绩录入等操作</li></ul><p>教师拥有部分权限</p><ul><li>教师编辑：编辑教师本人的信息</li><li>课程设置：查看自己开设的课程，选择课程并开课</li><li>教师成绩管理：可以查看并录入学生成绩</li></ul><p>学生拥有部分权限</p><ul><li>学生编辑：编辑本人的信息</li><li>选课管理：学生可以进行选课，以及对已选则的课表进行查看</li><li>学生成绩管理：查询学生本人的成绩</li></ul><h4 id="2、技术选型"><a href="#2、技术选型" class="headerlink" title="2、技术选型"></a>2、技术选型</h4><p>项目运行环境：mysql5.7 + idea + node + windows10</p><p>服务端技术选型：SpringBoot + Mybatis + mysql</p><p>前端技术选型及js库：Vue + ElementUI + axios</p><h4 id="3、成果展示"><a href="#3、成果展示" class="headerlink" title="3、成果展示"></a>3、成果展示</h4><ul><li>登陆界面</li></ul><p><a href="https://imgse.com/i/pCmu9un"><img src="https://s1.ax1x.com/2023/06/13/pCmu9un.png" alt="pCmu9un.png"></a></p><ul><li>系统管理员登陆界面</li></ul><p><a href="https://imgse.com/i/pCmuCBq"><img src="https://s1.ax1x.com/2023/06/13/pCmuCBq.png" alt="pCmuCBq.png"></a></p><ul><li>教师登陆界面</li></ul><p><a href="https://imgse.com/i/pCmnzcj"><img src="https://s1.ax1x.com/2023/06/13/pCmnzcj.png" alt="pCmnzcj.png"></a></p><ul><li>学生登陆界面</li></ul><p><a href="https://imgse.com/i/pCmu9un"><img src="https://s1.ax1x.com/2023/06/13/pCmu9un.png" alt="pCmu9un.png"></a></p>]]></content>
    
    
    <categories>
      
      <category>JavaWeb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Springboot+vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>网上书城项目</title>
    <link href="/2023/08/01/%E5%8F%AE%E5%BD%93%E4%B9%A6%E5%9F%8E/"/>
    <url>/2023/08/01/%E5%8F%AE%E5%BD%93%E4%B9%A6%E5%9F%8E/</url>
    
    <content type="html"><![CDATA[<h1 id="网上书城项目"><a href="#网上书城项目" class="headerlink" title="网上书城项目"></a>网上书城项目</h1><h2 id="一、项目功能"><a href="#一、项目功能" class="headerlink" title="一、项目功能"></a>一、项目功能</h2><h3 id="1-前台功能"><a href="#1-前台功能" class="headerlink" title="1.前台功能"></a>1.前台功能</h3><ol><li>图书基本展示,包括推荐图书展示和类图书类型展示.</li><li>推荐图书包括条幅推荐,热销推荐和新品推荐.</li><li>按照图书类型展示商品.</li><li>图书详细信息展示.</li><li>图书加入购物车.</li><li>修改购物车内图书信息,例如数量等.</li><li>用户登录.</li><li>用户注册.</li><li>修改个人信息,包括密码和收获信息.</li><li>购物车付款.</li><li>用户订单查询.</li><li>根据关键字搜索图书.</li></ol><h3 id="2-后台功能"><a href="#2-后台功能" class="headerlink" title="2.后台功能"></a>2.后台功能</h3><p><em>当管理员用户登录后会显示后台管理按钮,点击进入后台管理页面</em></p><ol><li>订单操作:包括按状态查询订单,修改订单状态(发货,完成,删除).</li><li>用户操作:包括查询所有用户,新增用户,修改用户密码,修改用户信息和删除用户.</li><li>图书类目操作:包括查看所有类目,增加图书类目,修改图书类目信息以及删除图书类目.</li><li>图书操作:包括查询所有图书,新增图书,修改现有图书信息以及删除图书.</li></ol><p><em>注意,删除用户时需要先删除用户下的所有订单，才可以删除用户。删除图书类目时，要先删除类目下的图书，才能删除图书类目。删除商品时，可直接删除，他的推荐信息也会直接删除!（不要问为什么做的这么蠢，当时脑子抽风了！）</em></p><h2 id="二、项目开发环境"><a href="#二、项目开发环境" class="headerlink" title="二、项目开发环境"></a>二、项目开发环境</h2><ol><li>项目使用IDEA 2018.3.5进行开发。</li><li>Maven版本为 3.6.2。</li><li>Tomcat版本为 8.5.42。</li><li>数据库为mysql 5.7。</li><li>JDK版本为1.8_211。</li><li>项目使用Spring+SpringMVC+Mybits框架。</li></ol><h2 id="三、项目还原设置"><a href="#三、项目还原设置" class="headerlink" title="三、项目还原设置"></a>三、项目还原设置</h2><ol><li>将bookshop.sql文件还原至数据库中。</li><li>打开BookShop&#x2F;src&#x2F;main&#x2F;java&#x2F;com&#x2F;vilicode&#x2F;config&#x2F;jdbc.properties文件进行配置：<ol><li>url更换为自己的数据库连接字符串。</li><li>user更换为自己数据库的用户名。</li><li>password更换为自己的密码。</li></ol></li><li>使用IDEA打开项目并重新指定jdk。</li><li>在IDEA中配置Maven路径并下载所需依赖文件。</li><li>下载Tomcat并在IDEA中配置。</li><li>运行项目。</li></ol><h1 id="四、效果展示"><a href="#四、效果展示" class="headerlink" title="四、效果展示"></a>四、效果展示</h1><ul><li><p>叮当首页</p></li><li><p><a href="https://imgse.com/i/pCeq0Dx"><img src="https://s1.ax1x.com/2023/06/13/pCeq0Dx.png" alt="pCeq0Dx.png"></a></p></li><li><p>热销推荐</p></li><li><p><a href="https://imgse.com/i/pCeqavR"><img src="https://s1.ax1x.com/2023/06/13/pCeqavR.png" alt="pCeqavR.png"></a></p></li><li><p>新品</p></li><li><p><a href="https://imgse.com/i/pCeqBb6"><img src="https://s1.ax1x.com/2023/06/13/pCeqBb6.png" alt="pCeqBb6.png"></a></p></li><li><p>客户管理</p></li><li><p><a href="https://imgse.com/i/pCeqU29"><img src="https://s1.ax1x.com/2023/06/13/pCeqU29.png" alt="pCeqU29.png"></a></p></li><li><p>类目管理</p></li><li><p><a href="https://imgse.com/i/pCeqtC4"><img src="https://s1.ax1x.com/2023/06/13/pCeqtC4.png" alt="pCeqtC4.png"></a></p></li><li><p>全部订单</p></li><li><p><a href="https://imgse.com/i/pCeqN8J"><img src="https://s1.ax1x.com/2023/06/13/pCeqN8J.png" alt="pCeqN8J.png"></a></p></li><li><p>商品管理</p></li><li><p><a href="https://imgse.com/i/pCeqwK1"><img src="https://s1.ax1x.com/2023/06/13/pCeqwK1.png" alt="pCeqwK1.png"></a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaWeb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SSM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图书管理系统</title>
    <link href="/2023/08/01/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/08/01/%E5%9B%BE%E4%B9%A6%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>这个项目是一个简单的图书管理系统，其中由三种角色：系统管理员、管理员、用户。三种角色都有对应权限，其中：</p><ul><li>系统管理员：对用户、书籍和类别的增删改查。</li><li>管理员：对借书和还书申请处理。</li><li>用户：对书籍的查看和借阅以及归还操作。</li></ul><h1 id="使用技术"><a href="#使用技术" class="headerlink" title="使用技术"></a>使用技术</h1><p>后端：springboot、mysql、mybatis-plus。</p><p>前端：javascript、css3、html5、bootstrap。</p><h1 id="账户登录"><a href="#账户登录" class="headerlink" title="账户登录"></a>账户登录</h1><p>登录账户</p><ul><li>系统管理员账户：admin 。密码：123</li><li>管理员账户：tom.密码：123</li><li>用户账户：lisi.密码：123123</li></ul><h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h1><h2 id="1、运行环境和所需工具"><a href="#1、运行环境和所需工具" class="headerlink" title="1、运行环境和所需工具"></a>1、运行环境和所需工具</h2><ul><li>编译器：IntelliJ IDEA</li><li>项目构建工具：Maven</li><li>数据库：Mysql</li><li>JDK版本：jdk1.8、</li></ul><h2 id="2、初始化项目"><a href="#2、初始化项目" class="headerlink" title="2、初始化项目"></a>2、初始化项目</h2><ul><li>在你的Mysql中，创建一个数据库名称为 library的数据库，并导入我提供的 .sql 文件。</li><li>进入src&#x2F;main&#x2F;resources修改application.yml配置文件,把数据库登录名和密码，改为你本地的。</li><li>使用 IntelliJ IDEA 导入项目，选择Maven项目选项，一路点击next就行。</li><li>在 IntelliJ IDEA 中，运行SpringBoot启动类。</li><li>运行</li></ul><p><a href="https://imgse.com/i/pCeZ32n"><img src="https://s1.ax1x.com/2023/06/12/pCeZ32n.png" alt="pCeZ32n.png"></a></p><ul><li>系统管理员界面</li></ul><p><a href="https://imgse.com/i/pCeZlCj"><img src="https://s1.ax1x.com/2023/06/12/pCeZlCj.png" alt="pCeZlCj.png"></a></p><ul><li>管理员界面</li></ul><p><a href="https://imgse.com/i/pCeZ18s"><img src="https://s1.ax1x.com/2023/06/12/pCeZ18s.png" alt="pCeZ18s.png"></a></p><ul><li>用户界面</li></ul><p><a href="https://imgse.com/i/pCeZM5Q"><img src="https://s1.ax1x.com/2023/06/12/pCeZM5Q.png" alt="pCeZM5Q.png"></a></p>]]></content>
    
    
    <categories>
      
      <category>JavaWeb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>springboot+bootstrap</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>教务查询系统</title>
    <link href="/2023/08/01/%E6%95%99%E5%8A%A1%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/08/01/%E6%95%99%E5%8A%A1%E6%9F%A5%E8%AF%A2%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>这个项目是一个简单的教务查询系统，其中有三种角色：管理员，教师，学生。三种角色都有相应的权限，其中：  </p><ul><li>管理员：对课程、学生信息、教师信息等进行增删改查，修改个人密码，修改学生和教师的密码</li><li>教师：可以查看自己教授的课程，查询选修该课程的学生，对选修该课程的学生进行打分，修改个人密码</li><li>学生：可以进行选课，查看已修课程，查看已选课程，退选课程，修改个人密码</li></ul><h1 id="使用技术"><a href="#使用技术" class="headerlink" title="使用技术"></a>使用技术</h1><p>Web框架：SpringBoot</p><p>ORM框架：Mybatis</p><p>安全框架：Shiro</p><p>分页插件：PageHelper</p><p>连接池：SpringBoot自带的HiKariCP</p><p>日志：SpringBoot自带的LogBack</p><p>前端框架：Bootstrap</p><h1 id="在线预览"><a href="#在线预览" class="headerlink" title="在线预览"></a>在线预览</h1><ul><li>登录账户<ul><li>管理员账户：admin</li><li>老师账户：1001</li><li>学生账户：10001</li><li>密码均为：123</li></ul></li></ul><h1 id="快速上手"><a href="#快速上手" class="headerlink" title="快速上手"></a>快速上手</h1><h3 id="1、运行环境和所需工具"><a href="#1、运行环境和所需工具" class="headerlink" title="1、运行环境和所需工具"></a>1、运行环境和所需工具</h3><ul><li>编译器：IntelliJ IDEA</li><li>项目构建工具：Maven</li><li>数据库：Mysql</li><li>JDK版本：jdk1.8</li><li>Tomcat版本：Tomcat8.x</li></ul><h3 id="2、初始化项目"><a href="#2、初始化项目" class="headerlink" title="2、初始化项目"></a>2、初始化项目</h3><ul><li>在你的Mysql中，创建一个数据库名称为 EducationalManagementSystem 的数据库，并导入我提供的 .sql 文件。</li><li>进入src&#x2F;main&#x2F;resources修改application.properties配置文件,把数据库登录名和密码，改为你本地的。</li><li>使用 IntelliJ IDEA 导入项目，选择Maven项目选项，一路点击next就行。</li><li>在 IntelliJ IDEA 中，运行SpringBoot启动类。</li><li>运行<br><a href="https://imgse.com/i/pCe9zxU"><img src="https://s1.ax1x.com/2023/06/12/pCe9zxU.png" alt="pCe9zxU.png"></a></li></ul><h1 id="功能模块介绍"><a href="#功能模块介绍" class="headerlink" title="功能模块介绍"></a>功能模块介绍</h1><h3 id="1、登录模块功能"><a href="#1、登录模块功能" class="headerlink" title="1、登录模块功能"></a>1、登录模块功能</h3><p>使用Shiro权限管理框架，实现登录验证和登录信息的储存，根据不同的登录账户，分发权限角色，对不同页面url进行角色设置</p><h3 id="2、管理员模块功能"><a href="#2、管理员模块功能" class="headerlink" title="2、管理员模块功能"></a>2、管理员模块功能</h3><p>管理员可对课程、学生信息、教师信息等进行增删改查，修改个人密码，修改学生和教师的密码</p><ul><li><p>课程管理：当课程已经有学生选课成功时，将不能删除</p></li><li><p>学生管理：添加学生信息时，其信息也会添加到登录表中</p></li><li><p>教师管理：添加教师信息时，其信息也会添加到登录表中</p></li><li><p>账户密码重置：修改学生和教师的密码，不需要输入旧密码</p></li><li><p>修改密码：修改自己的密码，需要输入旧密码</p></li><li><p><strong>所有学生信息：</strong><br><a href="https://imgse.com/i/pCeCiZ9"><img src="https://s1.ax1x.com/2023/06/12/pCeCiZ9.md.png" alt="pCeCiZ9.md.png"></a></p></li><li><p><strong>按照名字模糊查找学生信息：</strong><br><a href="https://imgse.com/i/pCeCVG6"><img src="https://s1.ax1x.com/2023/06/12/pCeCVG6.md.png" alt="pCeCVG6.md.png"></a></p></li><li><p><strong>添加学生信息：</strong><br><a href="https://imgse.com/i/pCeCnMD"><img src="https://s1.ax1x.com/2023/06/12/pCeCnMD.md.png" alt="pCeCnMD.md.png"></a></p></li><li><p><strong>修改学生信息：</strong><br><a href="https://imgse.com/i/pCeCQZd"><img src="https://s1.ax1x.com/2023/06/12/pCeCQZd.md.png" alt="pCeCQZd.md.png"></a></p></li><li><p><strong>删除学生信息：</strong><br><a href="https://imgse.com/i/pCeC1II"><img src="https://s1.ax1x.com/2023/06/12/pCeC1II.md.png" alt="pCeC1II.md.png"></a></p></li><li><p><strong>修改学生或教师的密码：</strong><br><a href="https://imgse.com/i/pCeC8it"><img src="https://s1.ax1x.com/2023/06/12/pCeC8it.md.png" alt="pCeC8it.md.png"></a></p></li><li><p><strong>修改自己的密码：</strong><br><a href="https://imgse.com/i/pCeCYz8"><img src="https://s1.ax1x.com/2023/06/12/pCeCYz8.md.png" alt="pCeCYz8.md.png"></a></p></li></ul><h3 id="3、教师模块功能"><a href="#3、教师模块功能" class="headerlink" title="3、教师模块功能"></a>3、教师模块功能</h3><p>教师登陆后，可以查看自己教授的课程，查询选修该课程的学生，对选修该课程的学生进行打分，修改个人密码</p><ul><li><strong>查看自己所教授的课程：</strong><br><a href="https://imgse.com/i/pCeCUsg"><img src="https://s1.ax1x.com/2023/06/12/pCeCUsg.md.png" alt="pCeCUsg.md.png"></a></li><li><strong>查询选修该课程的学生：</strong><br><a href="https://imgse.com/i/pCeC0ds"><img src="https://s1.ax1x.com/2023/06/12/pCeC0ds.png" alt="pCeC0ds.png"></a></li><li><strong>对选修该课程的学生进行打分：</strong><br><a href="https://imgse.com/i/pCeC6zT"><img src="https://s1.ax1x.com/2023/06/12/pCeC6zT.png" alt="pCeC6zT.png"></a></li><li><strong>修改自己的密码：</strong><br><a href="https://imgse.com/i/pCeCRL4"><img src="https://s1.ax1x.com/2023/06/12/pCeCRL4.png" alt="pCeCRL4.png"></a></li></ul><h3 id="4、学生模块功能"><a href="#4、学生模块功能" class="headerlink" title="4、学生模块功能"></a>4、学生模块功能</h3><p>学生登录后，可以进行选课，查看已修课程，查看已选课程，退选课程，修改个人密码</p><ul><li><strong>所有课程: 在这里选修课程，选好后，将会自动跳转到已选课程选项：</strong><br><a href="https://imgse.com/i/pCeChw9"><img src="https://s1.ax1x.com/2023/06/12/pCeChw9.png" alt="pCeChw9.png"></a></li><li><strong>已选课程: 这里显示的是，还没修完的课程，也就是老师还没给成绩，由于还没有给成绩，所以这里可以进行退课操作：</strong><br><a href="https://imgse.com/i/pCeCXeH"><img src="https://s1.ax1x.com/2023/06/12/pCeCXeH.png" alt="pCeCXeH.png"></a></li><li><strong>已修课程: 显示已经修完，老师已经给成绩的课程：</strong><br><a href="https://imgse.com/i/pCePpfP"><img src="https://s1.ax1x.com/2023/06/12/pCePpfP.png" alt="pCePpfP.png"></a></li></ul>]]></content>
    
    
    <categories>
      
      <category>JavaWeb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>springboot+jsp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>高校宿舍管理系统</title>
    <link href="/2023/08/01/%E9%AB%98%E6%A0%A1%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/"/>
    <url>/2023/08/01/%E9%AB%98%E6%A0%A1%E5%AE%BF%E8%88%8D%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="高校宿舍管理系统"><a href="#高校宿舍管理系统" class="headerlink" title="高校宿舍管理系统"></a>高校宿舍管理系统</h1><ol><li><h6 id="环境要求"><a href="#环境要求" class="headerlink" title="环境要求"></a>环境要求</h6><p>idea：所有版本都可以</p><p>mysql：5或者8</p><p>nodejs环境：版本为16+</p><p>maven：3.6.+</p></li><li><p>系统介绍</p><p>在宿舍管理系统的设计发开过程中主要用了springboot+vue技术，其中用到的工具有：JDK、IDEA、MySQL、Tomcat等。本系统是结合当下大多学校的基本宿舍管理设计的一个系统，系统共设计为3个大体模块：系统管理员模块、宿舍管理员、学生模块。实现整体宿舍信息的管理功能。</p></li><li><p>成果展示</p><p> 系统登录界面</p><p><a href="https://imgse.com/i/pCVrFIg"><img src="https://s1.ax1x.com/2023/06/11/pCVrFIg.png" alt="pCVrFIg.png"></a></p><p>系统管理员登录成功界面（宿舍管理员同样，只是少了宿管管理菜单）</p><p><a href="https://imgse.com/i/pCVrJzR"><img src="https://s1.ax1x.com/2023/06/11/pCVrJzR.png" alt="pCVrJzR.png"></a></p><p>学生登录界面</p><p><a href="https://imgse.com/i/pCVr6SA"><img src="https://s1.ax1x.com/2023/06/11/pCVr6SA.png" alt="pCVr6SA.png"></a></p></li><li><p>项目运行</p><p>运行后端：直接将解压后的目录导入idea如何配置好jdk版本和本地maven仓库即可。</p><p>运行前端：终端打开运行npm i,然后再npm run serve即可。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>JavaWeb</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Springboot+vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>第一篇文章</title>
    <link href="/2023/07/30/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
    <url>/2023/07/30/%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>未分类</category>
      
    </categories>
    
    
    <tags>
      
      <tag>测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/12/28/hello-world/"/>
    <url>/2022/12/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
